[tool.black]
target-version = ['{{cookiecutter.black_target_version}}']
include = '\.pyi?$'
line-length = 120
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | \venv
    | \.aws-sam
    | _build
    | buck-out
    | build
    | dist
    | migrations
    | node_modules
    | dependencies
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120

[tool.semantic_release]
version_variable = ["pyproject.toml:version"]
branch = "main"
upload_to_release = true
upload_to_repository = false
build_command = "pyinstaller --clean -F -n '{{ cookiecutter.program_name }}' main.pyw"

[tool.poetry]
name = "{{cookiecutter.project_name_slug}}"
version = "0.0.0"
description = ""
authors = ["Wolf Gear <opensource@wolfgear.tech>"]

[tool.poetry.dependencies]
python = "^3.10"
loguru = "*"
PyQt5 = "*"


[tool.poetry.dev-dependencies]
bandit = "*"
black = "*"
Faker = "*"
flake8 = "*"
isort = "*"
mock = "*"
pre-commit = "*"
pylint = "*"
pytest = "*"
pytest-black = "*"
pytest-coverage = "*"
pytest-mock = "*"
pytest-freezegun = "*"
pytest-lazy-fixture = "*"
pytest-pylint = "*"
requests-mock = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
